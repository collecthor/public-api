openapi: 3.0.0
info:
  title: DirectReport
  version: 2 (draft)
  contact:
    name: Directresearch BV
    email: info@directresearch.nl
    url: 'https://directresearch.nl'
  description: Public API for the Report Platform
servers:
  - url: 'http://localhost:3100'
    description: Stoplight Studio
paths:
  /api/export:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Export'
              examples: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '':
          headers:
            header-0:
              schema:
                type: string
      parameters:
        - schema:
            type: string
          in: query
          name: survey
          required: true
          description: User must have access to the survey identified by this ID
        - schema:
            type: string
          in: query
          name: selection
          description: 'Selection ID to apply, assumed to be unique across surveys'
      operationId: GetExports
      description: Fetch availbale exports in JSON
    parameters: []
  /api/data/:
    get:
      parameters:
        - description: 'Variable ID to fetch data for, assumed to be unique across surveys'
          in: query
          required: true
          schema:
            type: string
          name: survey
        - description: 'Selection ID to apply, assumed to be unique across surveys'
          name: selection
          in: query
          required: false
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: Variable data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      description: Fetch availbale data in JSON
      operationId: getPData
      tags: []
    parameters: []
  /api/report:
    get:
      parameters:
        - description: User must have access to the survey identified by this ID
          name: survey
          in: query
          required: true
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: Dashboard data and block structure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      description: Retrieve all data from a survey as JSON
      operationId: getSurveyData
      tags: []
      summary: Get response data
  /api/crossing:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: Crossings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crossing'
              examples:
                example-1:
                  value:
                    crossings:
                      rows:
                        - color: blue
                          shape: circle
                        - color: red
                          shape: triangle
                      settings: {}
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      parameters:
        - schema:
            type: string
          in: query
          name: survey
          description: User must have access to the survey identified by this ID
          required: true
      description: Fetch availbale crossings in JSON
      operationId: GetCrossings
components:
  schemas:
    ExportDef:
      title: ExportDef
      type: object
      properties:
        name:
          type: string
        url:
          type: string
          format: uri
        type:
          type: string
          enum:
            - csv
            - pdf
    Export:
      title: Export
      type: object
      properties:
        exports:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ExportDef'
      required:
        - exports
    Report:
      description: Object holding dashboard statistics and report blocks
      type: object
      properties:
        blocks:
          $ref: '#/components/schemas/Blocks'
        selections:
          description: List of selections that can be used when requesting variables using `data` endpoint
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
        survey:
          type: object
          properties:
            name:
              type: string
            client:
              type: string
        theme:
          type: object
          properties:
            colors:
              type: object
              properties:
                main-color:
                  type: string
                header-active-color:
                  type: string
                header-text-color:
                  type: string
            logo:
              type: string
        stats:
          $ref: ../models/stats.v1.yaml
    Dashboard:
      description: Object holding general report statistics
      type: object
      properties:
        completes:
          description: 'SimpleCount: Counts number of completes from all sources'
          type: object
          properties:
            label:
              type: string
            count:
              type: integer
        completes_open:
          description: 'SimpleCount: Counts number of completes from open links'
          type: object
          properties:
            label:
              type: string
            count:
              type: integer
        invites_sent:
          description: 'SimpleTable: Rows count different kinds of invitations, total counts their sum'
          type: object
          properties:
            caption:
              type: string
            rows:
              type: array
              items:
                $ref: '#/components/schemas/SimpleCount'
            total:
              $ref: '#/components/schemas/SimpleCount'
        invites_bounced:
          description: 'SimpleTable: Rows count different kinds of bounces, total counts their sum'
          type: object
          properties:
            caption:
              type: string
            rows:
              type: array
              items:
                $ref: '#/components/schemas/SimpleCount'
            total:
              $ref: '#/components/schemas/SimpleCount'
        response_percent:
          description: 'SimpleProportion: Completes / (CompletesOpen.total + InvitesSent.total - InvitesBounced.total)'
          type: object
          properties:
            label:
              type: string
            proportion:
              type: number
        dropouts_by_question:
          description: 'SimpleTable: Rows count respondents stuck at each question, total counts all non-completes'
          type: object
          properties:
            caption:
              type: string
            rows:
              type: array
              items:
                $ref: '#/components/schemas/SimpleCount'
            total:
              $ref: '#/components/schemas/SimpleCount'
        completed_last:
          description: 'SimpleText: Last participant datetime'
          type: object
          properties:
            label:
              type: string
            text:
              type: string
        completed_by_date:
          description: 'SimpleTable: Rows count completes by date, total counts their sum'
          type: object
          properties:
            caption:
              type: string
            rows:
              type: array
              items:
                $ref: '#/components/schemas/SimpleCount'
            total:
              $ref: '#/components/schemas/SimpleCount'
        average_duration:
          description: 'SimpleCount: Average questionnaire completion duration in seconds with outliers removed'
          type: object
          properties:
            label:
              type: string
            count:
              type: integer
        average_duration_formatted:
          description: 'SimpleText: Labelled string containing mm:ss formatted `average_duration`'
          type: object
          properties:
            label:
              type: string
            text:
              type: number
    Blocks:
      type: array
      items:
        anyOf:
          - description: 'SimpleBlock: Report block for a single variable'
            type: object
            properties:
              block_name:
                description: 'Block name, can be used as the title'
                type: string
              block_text:
                description: 'Block text, can be used for question text'
                type: string
              block_type:
                description: Single value enum implementing a const name for this block type (OpenAPI 3.1 provides the const type syntactic sugar)
                type: string
                enum:
                  - simple_block
              block_data:
                description: 'String: Link to the variable data, add optional non-zero selection parameter when making the request'
                type: string
                example: '{baseUrl}/api/data/variable?id=123'
          - description: 'CompoundBlock: Report block for a multiple variables with assumed identical categories'
            type: object
            properties:
              block_name:
                description: 'Block name, can be used as the title'
                type: string
              block_text:
                description: 'Block text, can be used for question text'
                type: string
              block_type:
                description: Single value enum implementing a const name for this block type (OpenAPI 3.1 provides the const type syntactic sugar)
                type: string
                enum:
                  - compound_block
              block_data:
                description: Array of strings
                type: array
                items:
                  description: 'String: Link to the variable data, add optional non-zero selection parameter when making the request'
                  type: string
                  example: '{baseUrl}/api/data/question?id=123'
    Data:
      description: Object holding all report data for the current request
      type: object
      properties:
        measurement_level:
          type: string
          enum:
            - nominal
            - scale
            - ordinal
        multiple_response:
          type: boolean
        data_type:
          type: string
          enum:
            - text
            - number
            - fraction
            - nps
            - rank
        total:
          type: integer
        label:
          type: string
        categories:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DataDef'
      required:
        - measurement_level
        - multiple_response
        - data_type
        - total
        - label
        - categories
    DataDef:
      title: DataDef
      type: object
      properties:
        label:
          type: string
        value:
          type: integer
        count:
          type: integer
        order:
          type: integer
        data:
          type: string
          format: uri
      required:
        - label
        - value
        - count
        - order
    SimpleTable:
      description: "SimpleTable, provides a caption, rows of SimpleCount's, and a total SimpleCount"
      type: object
      properties:
        caption:
          type: string
        rows:
          type: array
          items:
            $ref: '#/components/schemas/SimpleCount'
        total:
          $ref: '#/components/schemas/SimpleCount'
    SimpleCount:
      description: 'SimpleCount, provides a labelled count'
      type: object
      properties:
        label:
          type: string
        count:
          type: integer
    Crossing:
      title: Crossing
      type: object
      properties:
        crossings:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ExportDef'
          properties:
            rows:
              type: array
              items: {}
            settings:
              type: object
      x-examples:
        example-1:
          crossings:
            rows:
              - color: blue
                shape: circle
              - color: red
                shape: triangle
            settings: {}
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  securitySchemes:
    BearerAuth:
      type: http
      scheme: Bearer
    apiKey:
      name: X-API-Key
      type: apiKey
      in: header
security:
  - BearerAuth: []
  - apiKey: []
